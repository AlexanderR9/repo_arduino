***************************************************************************************
************************* LED индикатора TM1637 *******************************
***************************************************************************************
Модуль представляет собой небольшую плату, на которой установлен LED 4-х разрядный семисегментный дисплей 
на основе одноименного i2c драйвера TM1637.

//подключение модуля к ардуино
Подключается к любым дискретным пинам
    DS3231     Arduino
     GND   ->   GND
     VCC   ->   VCC
     CLK   ->   D8 (например) 
     DIO   ->   D7 (например)


// Подключаем библиотеку для работы с модулем
#include <GyverTM1637.h>  

//КОД СКЕТЧА

  TM1637 tm1637(3, 2); //Создаём объект класса TM1637 и передаём номера пинов
#####  tm1637.init(); //Инициализация модуля (выполнить в setup)

  tm1637.brightness(2); //Установка яркости горения сегментов 0..7
  tm1637.clear();
  tm1637.point(true);  //Задание включение/отключения разделителя  
  tm1637.display(uint8_t[]); //Выводим массив на дисплей
  tm1637.displayClockTwist(hrs, mins, 35);    // выводим время
  tm1637.display(0, 9);    //выводим цифры "прицельно", 0(uint8_t) ячейка, цифра 9(uint8_t)


Пример: 
 int8_t DispMSG[] = {1, 2, 3, 4};   // Настройка символов для последующего вывода на дислей
 tm1637.display(DispMSG);



***************************************************************************************
************************* OLED 128X64 I2C SSD1306 0,96 дюйма **************
***************************************************************************************
В OLED (Organic Light-Emitting Diode) дисплеях используется технология в которой светодиоды сами излучают свет без дополнительного подсвечивания как например в LCD дисплеях. 
Дисплей OLED состоит из тонкой многослойной органической пленки, помещенной между анодом и катодом. 
OLED обладает высоким потенциалом применения практически для всех типов дисплеев и рассматривается в качестве конечной 
технологии для следующего поколения плоских дисплеев. Качество отображения информации, дешевизна и идеальные углы обзора OLED дисплея делают его лидером среди дисплеев.

Характеристики:
    Не требуется подсветка дисплея
    Высокое разрешение: 128 * 64 пикселей.
    Угол обзора: больше 160 градусов.
    Ультра-низкое энергопотребление: при полном свечении экрана 0.08W
    Рабочее напряжение: 3V ~ 5 В постоянного тока.
    Рабочая температура: -30 C ~ 70 C.
    I2C / IIC интерфейс, нужно только 2 провода.
    Драйвер IC: SSD1306.
    Размер платы: 2.7см х 2.8см.
    Размер дисплея: 2.7см х 1,95см  (0,96″ дюйма)

//подключение модуля к ардуино
Подключается к шине i2c (пины A4 и A5)
    DS3231     Arduino
     GND   ->   GND
     VCC   ->   VCC
     SDA   ->   A4
     SCL   ->   A5



//  Библиотека  iarduino_OLED_txt (текстовая) экономит ОЗУ, если нужно выводить только текст и числа
//  Бибилиотека iarduino_OLED     (графическая), все возможности         
// Подключаем библиотеку для работы с модулем
#include <iarduino_OLED_txt.h>                                

   iarduino_OLED  myOLED(0x3C); // Объявляем объект myOLED, указывая адрес дисплея на шине I2C: 0x3C или 0x3D.
   myOLED.begin(); //Иницилизация объекта
   myOLED.drawImage(Img_Logo, 0, 30); // Выводим картинку Img_Logo в позицию 0x30. (Img_Logo объявлен в библиотеке)
   myOLED.setFont(MediumFont);            // Указываем шрифт который требуется использовать для вывода цифр и текста. (шрифты объявлены в библиотеке)
   myOLED.update(); // Принудительное обновление данных на экране дисплея. 
   myOLED.print("iarduino", OLED_R);      // Выводим текст "iarduino", выравнивая его по правому краю. Нижний край текста совпадёт с нижним краем предыдущей картинки.

	//перегруженные функции
	print(char*,	int=OLED_N, int=OLED_N);	//Объявляем  функцию вывода текста(Параметры: текст, № колонки, № строки)
	print(const char*,	int=OLED_N, int=OLED_N);	//Объявляем  функцию вывода текста(Параметры: текст, № колонки, № строки)
	print(String,	int=OLED_N, int=OLED_N);	//Объявляем  функцию вывода текста(Параметры: текст, № колонки, № строки)
	print(int8_t,	int=OLED_N, int=OLED_N, uint8_t=DEC);	//Объявляем  функцию вывода чисел(Параметры: число, № колонки, № строки, система счисления)
	print(uint8_t,	int=OLED_N, int=OLED_N, uint8_t=DEC);	//Объявляем  функцию вывода чисел(Параметры: число, № колонки, № строки, система счисления)
	print(int16_t,	int=OLED_N, int=OLED_N, uint8_t=DEC);	//Объявляем  функцию вывода чисел(Параметры: число, № колонки, № строки, система счисления)
	print(uint16_t,	int=OLED_N, int=OLED_N, uint8_t=DEC);	//Объявляем  функцию вывода чисел(Параметры: число, № колонки, № строки, система счисления)
	print(int32_t,	int=OLED_N, int=OLED_N, uint8_t=DEC);	//Объявляем  функцию вывода чисел(Параметры: число, № колонки, № строки, система счисления)
	print(uint32_t,	int=OLED_N, int=OLED_N, uint8_t=DEC);	//Объявляем  функцию вывода чисел(Параметры: число, № колонки, № строки, система счисления)
	print(double,	int=OLED_N, int=OLED_N, uint8_t=2);	//Объявляем  функцию вывода чисел(Параметры: число, № колонки, № строки, количество знаков после запятой)
	OLED_N == 255
	OLED_R == 254

  еще есть фунции для рисования типа drawLine, drawRect, см справку в интернете	


***************************************************************************************
************************* Модуль ЖК 1602   IIC/I2C **************
***************************************************************************************

//подключение модуля к ардуино
//Подключается к шине i2c (пины A4 и A5)
    DS3231     Arduino
     GND   ->   GND
     VCC   ->   VCC
     SDA   ->   A4
     SCL   ->   A5


// Подключаем библиотеку для работы с модулем
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C led1602(0x27,16,2);  //объявление объекта с его характеристиками (16 символов, 2 строки, проверить адрес)
led1602.init(); //инициализация объекта
led1602.backlight();// Включаем подсветку дисплея
led1602.setCursor(8, 1); //установить курсор в заданную позицию столбец\строка (0..15\1)

//вывод на экран, предварительно установив курсор
led1602.print(double value, int precision);
led1602.print(int);
led1602.print(string);



